//код представляет собой простую тестовую программу для проверки класса `AgeChecker`, описанного в предыдущем вопросе.
public class AgeTest {//Класс `AgeTest` содержит статический метод `main`, который является точкой входа в программу.
    public static void main(String[] args) {
//Создается новый объект `AgeChecker`, который сохраняется в переменную `p`.
        AgeChecker p = new AgeChecker();
//В блоке `try-catch` код пытается установить возраст объекта `p` в значение `-123`, вызывая метод `setAge(-123)`.
//Однако, так как это значение не попадает в допустимый диапазон (0 до 120), метод `setAge` генерирует исключение `CustomAgeException`.
        try {
            p.setAge(18);
            p.setAge(-123);
//Когда исключение генерируется, управление немедленно передается в блок `catch`, который затем обрабатывает исключение
        } catch (CustomAgeException e) {
            System.err.println(e.getMessage());
        }
    }
}
//обработка заключается в выводе сообщения об ошибке, что производится с помощью вызова `e.getMessage()`.
//Этот метод вернет строку, которую вы задали при создании экземпляра исключения (`"age is incorrect"`).
//Это сообщение будет выведено на стандартный поток ошибок с помощью `System.err.println()`.
//Комментарий в коде `//p.setAge(18);` отключает строку, которая устанавливает возраст в допустимое значение 18.
//Вы можете расскомментировать эту строку и закомментировать `p.setAge(-123);`, чтобы увидеть, как работает код, когда исключение не выбрасывается.